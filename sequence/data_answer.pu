@startuml

User_App -> WebRTC_GW: POST /peers \n {\n\tkey: "YOUR_API_KEY",\n\t domain: "localhost",\n\tturn: true, \n\tpeer_id: "data_callee"\n}
WebRTC_GW --> User_App: 201 Created\n{\n\tcommand_type: "PEERS_CREATE",\n\tparams: {\n\t\tpeer_id: "data_callee", \n\t\ttoken: "pt-01e64c04-6981-4fde-a688-82dabfff3ee4"\n\t}\n}


WebRTC_GW -> SkyWay_Server: CREATE PEER
User_App -> WebRTC_GW: GET /peers/data_callee/events?\ntoken=pt-01e64c04-6981-4fde-a688-82dabfff3ee4
SkyWay_Server --> WebRTC_GW: SUCCESS\n(to bind peer id)
WebRTC_GW --> User_App: 200 OK\n{\n\tevent: "OPEN",\n\tparams: {\n\t\tpeer_id: "data_callee",\n\t\ttoken: "pt-01e64c04-6981-4fde-a688-82dabfff3ee4"\n\t}\n}

User_App -> WebRTC_GW: post /data {}
WebRTC_GW --> User_App: 201 Created\n{\n\tdata_id: "da-04193443-5679-4d96-8162-2c4557823bbb",\n\tip_v4: "172.16.1.106", \n\tport: 50001\n}

User_App -> WebRTC_GW: GET /peers/data_callee/events?\ntoken=pt-01e64c04-6981-4fde-a688-82dabfff3ee4


Target_Peer -> WebRTC_GW: datachannel connection
note left: Wait for a connection request\n from target peer
WebRTC_GW --> User_App: 200 OK\n{\n\tdata_params: {\n\t\tdata_connection_id: "dc-856e2de9-f5ed-4549-a1f2-66cc18df60cf"\n\t}, \n\tevent: "CONNECTION", \n\tparams: {\n\t\tpeer_id: "data_callee",\n\t\ttoken: "pt-01e64c04-6981-4fde-a688-82dabfff3ee4"\n\t}\n}

User_App -> WebRTC_GW: GET /data/connections/\ndc-856e2de9-f5ed-4549-a1f2-66cc18df60cf/events
note right: Wait for the DataConnection\n open event
WebRTC_GW --> User_App: 200 OK\n{\n\tevent: "OPEN"\n}

User_App -> WebRTC_GW: PUT /data/connections\n/c-856e2de9ff-f5ed-4549-a1f2-66cc18df60cf\n{\n\tfeed_params:{\n\t\tdata_id: "da-04193443-5679-4d96-8162-2c4557823bbb"\n\t},\n\tredirect_params: {\n\t\tip_v4: "127.0.0.1",\n\t\tport: 10002\n\t}\n}
WebRTC_GW --> User_App: 200 OK\n{\n\tcommand_type: "DATA_CONNECTION_PUT", \n\tdata_id: "da-50a32bab-b3d9-4913-8e20-f79c90a6a211"\n}

loop
User_App -> WebRTC_GW: send UDP data to 172.16.1.106:50001
WebRTC_GW -> Target_Peer: redirect data with DataChannel
Target_Peer -> WebRTC_GW: recv data with DataChannel
WebRTC_GW -> User_App: redirect data to 127.0.0.1:10002 with UDP
end

User_App -> WebRTC_GW: Delete /data/connections\n/dc-f6a62e07-af36-4d08-8857-bbc49a37b4b3
WebRTC_GW -> Target_Peer: Close DataChannel
WebRTC_GW -> WebRTC_GW: erase Data object
WebRTC_GW --> User_App: 204 No Content
User_App -> WebRTC_GW: Delete /peers/data_callee?\ntoken=pt-cbc75380-ed48-456e-b5d8-b924d9d5b23e
WebRTC_GW -> SkyWay_Server: disconnect
WebRTC_GW --> User_App: 204 No Content
@enduml
